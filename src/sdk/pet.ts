/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { petDeletePet } from "../funcs/petDeletePet.js";
import { petFindPetsByTagsTester } from "../funcs/petFindPetsByTagsTester.js";
import { petGetPetByIDS } from "../funcs/petGetPetByIDS.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Pet extends ClientSDK {
  /**
   * Finds Pets by tags
   *
   * @remarks
   * Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
   */
  async findPetsByTagsTester(
    request: operations.FindPetsByTagsTesterRequest,
    options?: RequestOptions,
  ): Promise<Array<components.Pet>> {
    return unwrapAsync(petFindPetsByTagsTester(
      this,
      request,
      options,
    ));
  }

  /**
   * Find pet by ID
   *
   * @remarks
   * Returns a single pet
   */
  async getPetByIDS(
    request: operations.GetPetByIDSRequest,
    options?: RequestOptions,
  ): Promise<components.Pet> {
    return unwrapAsync(petGetPetByIDS(
      this,
      request,
      options,
    ));
  }

  /**
   * Deletes a pet
   */
  async deletePet(
    request: operations.DeletePetRequest,
    options?: RequestOptions,
  ): Promise<components.Pet> {
    return unwrapAsync(petDeletePet(
      this,
      request,
      options,
    ));
  }
}
