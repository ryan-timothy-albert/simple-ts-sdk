/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * successful operation
 */
export type SayHelloResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const SayHelloResponseBody$inboundSchema: z.ZodType<
  SayHelloResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type SayHelloResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const SayHelloResponseBody$outboundSchema: z.ZodType<
  SayHelloResponseBody$Outbound,
  z.ZodTypeDef,
  SayHelloResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SayHelloResponseBody$ {
  /** @deprecated use `SayHelloResponseBody$inboundSchema` instead. */
  export const inboundSchema = SayHelloResponseBody$inboundSchema;
  /** @deprecated use `SayHelloResponseBody$outboundSchema` instead. */
  export const outboundSchema = SayHelloResponseBody$outboundSchema;
  /** @deprecated use `SayHelloResponseBody$Outbound` instead. */
  export type Outbound = SayHelloResponseBody$Outbound;
}

export function sayHelloResponseBodyToJSON(
  sayHelloResponseBody: SayHelloResponseBody,
): string {
  return JSON.stringify(
    SayHelloResponseBody$outboundSchema.parse(sayHelloResponseBody),
  );
}

export function sayHelloResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<SayHelloResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SayHelloResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SayHelloResponseBody' from JSON`,
  );
}
