/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type FindPetsByTagsTesterRequest = {
  /**
   * Tags to filter by
   */
  tags?: Array<string> | undefined;
};

/** @internal */
export const FindPetsByTagsTesterRequest$inboundSchema: z.ZodType<
  FindPetsByTagsTesterRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  tags: z.array(z.string()).optional(),
});

/** @internal */
export type FindPetsByTagsTesterRequest$Outbound = {
  tags?: Array<string> | undefined;
};

/** @internal */
export const FindPetsByTagsTesterRequest$outboundSchema: z.ZodType<
  FindPetsByTagsTesterRequest$Outbound,
  z.ZodTypeDef,
  FindPetsByTagsTesterRequest
> = z.object({
  tags: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindPetsByTagsTesterRequest$ {
  /** @deprecated use `FindPetsByTagsTesterRequest$inboundSchema` instead. */
  export const inboundSchema = FindPetsByTagsTesterRequest$inboundSchema;
  /** @deprecated use `FindPetsByTagsTesterRequest$outboundSchema` instead. */
  export const outboundSchema = FindPetsByTagsTesterRequest$outboundSchema;
  /** @deprecated use `FindPetsByTagsTesterRequest$Outbound` instead. */
  export type Outbound = FindPetsByTagsTesterRequest$Outbound;
}

export function findPetsByTagsTesterRequestToJSON(
  findPetsByTagsTesterRequest: FindPetsByTagsTesterRequest,
): string {
  return JSON.stringify(
    FindPetsByTagsTesterRequest$outboundSchema.parse(
      findPetsByTagsTesterRequest,
    ),
  );
}

export function findPetsByTagsTesterRequestFromJSON(
  jsonString: string,
): SafeParseResult<FindPetsByTagsTesterRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FindPetsByTagsTesterRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindPetsByTagsTesterRequest' from JSON`,
  );
}
