/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetPlanByIDSRequest = {
  /**
   * ID of plan to return
   */
  planId: number;
};

/** @internal */
export const GetPlanByIDSRequest$inboundSchema: z.ZodType<
  GetPlanByIDSRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  planId: z.number().int(),
});

/** @internal */
export type GetPlanByIDSRequest$Outbound = {
  planId: number;
};

/** @internal */
export const GetPlanByIDSRequest$outboundSchema: z.ZodType<
  GetPlanByIDSRequest$Outbound,
  z.ZodTypeDef,
  GetPlanByIDSRequest
> = z.object({
  planId: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPlanByIDSRequest$ {
  /** @deprecated use `GetPlanByIDSRequest$inboundSchema` instead. */
  export const inboundSchema = GetPlanByIDSRequest$inboundSchema;
  /** @deprecated use `GetPlanByIDSRequest$outboundSchema` instead. */
  export const outboundSchema = GetPlanByIDSRequest$outboundSchema;
  /** @deprecated use `GetPlanByIDSRequest$Outbound` instead. */
  export type Outbound = GetPlanByIDSRequest$Outbound;
}

export function getPlanByIDSRequestToJSON(
  getPlanByIDSRequest: GetPlanByIDSRequest,
): string {
  return JSON.stringify(
    GetPlanByIDSRequest$outboundSchema.parse(getPlanByIDSRequest),
  );
}

export function getPlanByIDSRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetPlanByIDSRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPlanByIDSRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPlanByIDSRequest' from JSON`,
  );
}
