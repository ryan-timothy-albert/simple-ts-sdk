/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * successful operation
 */
export type SayRandomResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const SayRandomResponseBody$inboundSchema: z.ZodType<
  SayRandomResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type SayRandomResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const SayRandomResponseBody$outboundSchema: z.ZodType<
  SayRandomResponseBody$Outbound,
  z.ZodTypeDef,
  SayRandomResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SayRandomResponseBody$ {
  /** @deprecated use `SayRandomResponseBody$inboundSchema` instead. */
  export const inboundSchema = SayRandomResponseBody$inboundSchema;
  /** @deprecated use `SayRandomResponseBody$outboundSchema` instead. */
  export const outboundSchema = SayRandomResponseBody$outboundSchema;
  /** @deprecated use `SayRandomResponseBody$Outbound` instead. */
  export type Outbound = SayRandomResponseBody$Outbound;
}

export function sayRandomResponseBodyToJSON(
  sayRandomResponseBody: SayRandomResponseBody,
): string {
  return JSON.stringify(
    SayRandomResponseBody$outboundSchema.parse(sayRandomResponseBody),
  );
}

export function sayRandomResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<SayRandomResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SayRandomResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SayRandomResponseBody' from JSON`,
  );
}
